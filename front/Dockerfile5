FROM node:slim as buildContainer

# set working directory (also creates two folders needed for cypress)
RUN mkdir -p /usr/src/app
RUN mkdir /usr/src/app/cypress
RUN mkdir /usr/src/app/cypress/plugins
WORKDIR /usr/src/app

COPY ./package.json ./package-lock.json /usr/src/app/
COPY ./yarn.lock /usr/src/app/

RUN yarn global add nodemon @angular/cli
RUN yarn install


RUN npm run build:ssr

FROM node:slim

WORKDIR /app
# Copy dependency definitions
COPY --from=buildContainer /usr/src/app/package.json /app

# Get all the code needed to run the app
COPY --from=buildContainer /usr/src/app/dist /usr/src/app/dist

# Expose the port the app runs in
EXPOSE 3000

# Serve the app
CMD ["npm", "run", "serve:ssr"]




# base image
FROM node:slim

RUN apt-get update

# set working directory (also creates two folders needed for cypress)
RUN mkdir -p /usr/src/app
RUN chmod -R 777 /usr/src/app
RUN mkdir /usr/src/app/cypress
RUN mkdir /usr/src/app/cypress/plugins
WORKDIR /usr/src/app


# COPY . /usr/src/app
COPY package.json /usr/src/app

COPY yarn.lock /usr/src/app

RUN yarn global add nodemon @angular/cli
RUN yarn install
#RUN yarn add @nguniversal/common @angular/platform-server @nguniversal/module-map-ngfactory-loader



#  RUN yarn run build:ssr

# Serve the app
CMD ["yarn", "run", "start"]


FROM node:slim as buildContainer

# set working directory (also creates two folders needed for cypress)
RUN mkdir /usr/src/app
RUN mkdir /usr/src/app/cypress
RUN mkdir /usr/src/app/cypress/plugins
WORKDIR /usr/src/app

COPY . /usr/src/app
RUN yarn global add nodemon @angular/cli
RUN yarn install
# RUN yarn run build:ssr


# Expose the port the app runs in
EXPOSE 3000


# start app
CMD ["yarn", "run", "start"]

