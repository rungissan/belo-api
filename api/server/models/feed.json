{
  "name": "Feed",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "spiti",
      "table": "feed"
    }
  },
  "mixins": {
    "Timestamp": {},
    "RelationsValidate": {
      "image": {
        "checkOwner": true
      }
    },
    "CreateWithRelationsLink": {
      "geolocations": {
        "removeOldRelations": true
      },
      "additionalImages": {
        "checkOwner": true,
        "removeOldRelations": true
      }
    },
    "ReadOnly" : {
      "userId": true,
      "openHouseId" : true
    },
    "SetOwner": {},
    "RemoteRouting" : {
      "only": [
        "@find",
        "@findById",
        "@create",
        "@deleteById",
        "updateAttributes",
        "__link__additionalImages",
        "__unlink__additionalImages",
        "__link__geolocations",
        "__unlink__geolocations"
      ]
    },
    "AjvValidation": {
      "remoteHooks": {
        "prototype.setOpenHouse":  {
          "schema": "open-house",
          "args": "openHouse"
        }
      }
    },
    "CountsRentSoldAvailable": {}
  },
  "properties": {
    "id": {
      "type": "number",
      "id": true
    },
    "userId": {
      "type": "number",
      "postgresql": {
        "columnName": "userId",
        "dataType": "integer"
      }
    },
    "openHouseId": {
      "type": "number",
      "postgresql": {
        "columnName": "openHouseId",
        "dataType": "integer"
      }
    },
    "type": {
      "type": "string",
      "maxLength": 20,
      "description": "post, listing, openHouse"
    },
    "title": {
      "type": "string",
      "maxLength": 255,
      "postgresql": {
        "dataType": "character varying"
      }
    },
    "feedStatus": {
      "type": "number",
      "required":false,
      "default": 0,
      "postgresql": {
        "columnName": "feedStatus"
      }
    },
    "noFee": {
      "type": "boolean",
      "required": false,
      "default": false,
      "postgresql": {
        "columnName": "noFee"
      }
    },
    "hasOwner": {
      "type": "boolean",
      "required": false,
      "default": false,
      "postgresql": {
        "columnName": "hasOwner"
      }
    },
    "sold_at": {
      "type": "date",
      "postgresql": {
        "dataType": "time without time zone",
        "columnName": "sold_at"
      }
    },
    "actual_sold_price": {
      "type": "number",
      "required":false,
      "postgresql": {
        "columnName": "actual_sold_price",
        "dataType": "integer"
      }
    },
    "expiration": {
      "type": "date",
      "required": false,
      "default": "$now",
      "postgresql": {
        "columnName": "expiration"
      }
    },
    "description": {
      "type": "string"
    },
    "imageId": {
      "type": "number",
      "min": 1,
      "postgresql": {
        "columnName": "imageId",
        "dataType": "integer"
      }
    },
    "parentId": {
      "type": "number",
      "min": 1,
      "postgresql": {
        "columnName": "parentId",
        "dataType": "integer"
      }
    },
    "displayAddress": {
      "type": "boolean",
      "postgresql": {
        "columnName": "displayAddress"
      }
    },
    "showInBrokerFeed": {
      "type": "boolean",
      "postgresql": {
        "columnName": "showInBrokerFeed"
      }
    },
    "banned_at": {
      "type": "date",
      "postgresql": {
        "columnName": "banned_at",
        "dataType": "timestamp with time zone"
      }
    }
  },
  "validations": [],
  "relations": {
    "user": {
      "type": "belongsTo",
      "model": "Client",
      "foreignKey": "userId"
    },
    "account": {
      "type": "belongsTo",
      "model": "Account",
      "foreignKey": "userId"
    },
    "favoriteFeeds": {
      "type": "hasMany",
      "model": "Account",
      "through": "FavoriteFeed",
      "foreignKey": "feedId",
      "keyThrough": "userId"
    },
    "feedOptions": {
      "type": "hasOne",
      "model": "FeedOptions",
      "foreignKey": "feedId"
    },
    "image": {
      "type": "belongsTo",
      "model": "Attachment",
      "foreignKey": "imageId"
    },
    "additionalImages": {
      "type": "hasMany",
      "model": "Attachment",
      "through": "AttachmentToFeed",
      "foreignKey": "feedId",
      "keyThrough": "attachmentId"
    },
    "geolocations": {
      "type": "hasMany",
      "model": "Geolocation",
      "through": "GeolocationToFeed",
      "foreignKey": "feedId",
      "keyThrough": "geolocationId"
    },
    "openHouse": {
      "type": "hasOne",
      "model": "OpenHouse",
      "foreignKey": "feedId"
    },
    "appointment": {
      "type": "hasMany",
      "model": "Appointment",
      "foreignKey": "feedId"
    },
    "statusCheck": {
      "type": "hasMany",
      "model": "StatusCheck",
      "foreignKey": "feedId"
    }
  },
  "acls": [
    {
      "accessType": "READ",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    },
    {
      "accessType": "WRITE",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "WRITE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    },
    {
      "principalType": "ROLE",
      "principalId": "prof",
      "permission": "ALLOW",
      "property": "create"
    },
    {
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW",
      "property": "banFeed"
    },
    {
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "sendBanRequest"
    }
  ],
  "methods": []
}
