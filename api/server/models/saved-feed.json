{
  "name": "SavedFeed",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "postgresql": {
      "schema": "spiti",
      "table": "saved_feed"
    }
  },
  "mixins": {
    "Timestamp": {},
    "ReadOnly" : {
      "userId": true
    },
    "SetOwner": {},
    "RemoteRouting" : {
      "only": [
        "@find",
        "@findById",
        "@create",
        "@deleteById",
        "updateAttributes"
      ]
    }
  },
  "properties": {
    "id": {
      "type": "number",
      "id": true
    },
    "userId": {
      "type": "number",
      "postgresql": {
        "columnName": "userId",
        "dataType": "integer"
      }
    },
    "name": {
      "type": "string",
      "maxLength": 255,
      "postgresql": {
        "dataType": "character varying"
      }
    },
    "type": {
      "type": "string",
      "maxLength": 20,
      "postgresql": {
        "columnName": "type",
        "dataType": "character varying"
      }
    },
    "description": {
      "type": "string",
      "maxLength": 20,
      "postgresql": {
        "columnName": "description",
        "dataType": "character varying"
      }
    },
    "displayAddress": {
      "type": "boolean",
      "postgresql": {
        "columnName": "displayAddress"
      }
    },
    "showInBrokerFeed": {
      "type": "boolean",
      "postgresql": {
        "columnName": "showInBrokerFeed"
      }
    },
    "geolocations": {
      "type": "hasMany",
      "model": "Geolocation",
      "through": "GeolocationToFeed",
      "foreignKey": "feedId",
      "keyThrough": "geolocationId"
    },
    "feedOptions": {
      "type": "object",
      "postgresql": {
        "columnName": "feedOptions",
        "dataType": "jsonb"
      }
    },
    "openHouse": {
      "type": "object",
      "postgresql": {
        "columnName": "openHouse",
        "dataType": "jsonb"
      }
    },
    "additionalFilters": {
      "type": "object",
      "postgresql": {
        "columnName": "additionalFilters",
        "dataType": "jsonb"
      }
    }
  },
  "validations": [],
  "relations": {
    "account": {
      "type": "belongsTo",
      "model": "Account",
      "foreignKey": "userId"
    }
  },
  "acls": [
    {
      "accessType": "WRITE",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "WRITE",
      "principalType": "ROLE",
      "principalId": "$owner",
      "permission": "ALLOW"
    },
    {
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "create"
    }
  ],
  "methods": []
}
